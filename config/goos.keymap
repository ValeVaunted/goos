/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { flavor = "hold-preferred"; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        Tri {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };

    behaviors {
        hrm: home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        lt_repeat: lt_repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_REPEAT";
            bindings = <&mo>, <&key_repeat>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Gamepad {
            bindings = <&tog 4>;
            key-positions = <8 28>;
        };

        toggle_colemak {
            bindings = <&tog 5>;
            key-positions = <0 20>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <30 35>;
        };

        Permanent_Num {
            bindings = <&tog 2>;
            key-positions = <33 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha_colemak_dh {
            bindings = <
&kp Q                &kp W            &kp F                &kp P              &kp B                               &kp J         &kp L               &kp U                 &kp Z             &mt EXCLAMATION QUESTION
&hrm LEFT_CONTROL A  &hrm LEFT_ALT R  &hrm LEFT_COMMAND S  &hrm LEFT_SHIFT T  &kp G                               &kp M         &hrm RIGHT_SHIFT N  &hrm RIGHT_COMMAND E  &hrm RIGHT_ALT I  &hrm RIGHT_CONTROL O
&kp Y                &kp X            &kp C                &kp D              &kp V                               &kp K         &kp H               &kp COMMA             &kp DOT           &kp LESS_THAN
                                                           &kp SPACE          &mo 2  &kp LEFT_SHIFT    &kp ENTER  &lt 1 ESCAPE  &kp BSPC
            >;
        };

        Symbol {
            bindings = <
&kp CARET                  &kp DOLLAR                  &kp SQT                         &kp DOUBLE_QUOTES                       &none                                   &none      &none                  &none                     &none                    &none
&hrm LEFT_CONTROL PERCENT  &hrm LEFT_ALT AMPERSAND     &hrm LEFT_COMMAND EXCLAMATION   &hrm LEFT_SHIFT QUESTION                &kp TILDE                               &kp EQUAL  &hrm RIGHT_SHIFT PLUS  &hrm RIGHT_COMMAND MINUS  &hrm RIGHT_ALT ASTERISK  &hrm RIGHT_CONTROL SLASH
&kp BACKSLASH              &mt RIGHT_BRACE LEFT_BRACE  &mt RIGHT_BRACKET LEFT_BRACKET  &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &kp PIPE                                &none      &kp TAB                &kp COMMA                 &kp PERIOD               &none
                                                                                       &kp SPACE                               &mo 2      &kp LEFT_SHIFT    &kp ENTER  &none      &kp BACKSPACE
            >;

            label = "symbol_layer";
        };

        Numbers_Navigation {
            bindings = <
&kp MINUS                   &kp N7                  &kp N8                      &kp N9                    &kp PLUS                               &kp C_VOLUME_DOWN  &kp C_VOLUME_UP        &kp UP_ARROW             &kp K_MUTE            &none
&hrm LEFT_CONTROL NUMBER_1  &hrm LEFT_ALT NUMBER_2  &hrm LEFT_COMMAND NUMBER_3  &hrm LEFT_SHIFT NUMBER_4  &kp N5                                 &kp LEFT           &hrm RIGHT_SHIFT LEFT  &hrm RIGHT_COMMAND DOWN  &hrm RIGHT_ALT RIGHT  &kp RIGHT_CONTROL
&kp NUMBER_6                &kp N7                  &kp N8                      &kp N9                    &kp N0                                 &kp C_BRI_DN       &kp C_PREV             &kp C_PP                 &kp C_NEXT            &kp C_BRIGHTNESS_INC
                                                                                &kp SPACE                 &none     &kp LEFT_SHIFT    &kp ENTER  &lt 1 ESCAPE       &kp BSPC
            >;

            label = "numb_nav_layer";
        };

        Tri {
            bindings = <
&bootloader   &none  &none  &none  &none                  &none  &none           &none  &none  &bootloader
&bt BT_SEL 0  &none  &none  &none  &none                  &none  &kp LG(LS(N4))  &none  &none  &none
&bt BT_CLR    &none  &none  &none  &none                  &none  &none           &none  &none  &none
                            &none  &none  &none    &none  &none  &none
            >;

            label = "tri_layer";
        };

        gamepad {
            bindings = <
&kp ESC  &kp Q  &kp W  &kp E      &kp R                      &none  &kp L     &kp UP    &kp R      &none
&kp TAB  &kp A  &kp S  &kp D      &kp F                      &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none
&none    &kp Y  &kp X  &kp C      &none                      &none  &kp S     &none     &kp E      &none
                       &kp LSHFT  &kp SPACE  &none    &kp B  &kp A  &none
            >;
        };

        alpha_qwerty {
            bindings = <
&kp Q                &kp W            &kp E                &kp R              &kp T                               &kp Y        &kp U               &kp I                 &kp O             &kp P
&hrm LEFT_CONTROL A  &hrm LEFT_ALT S  &hrm LEFT_COMMAND D  &hrm LEFT_SHIFT F  &kp G                               &kp H        &hrm RIGHT_SHIFT J  &hrm RIGHT_COMMAND K  &hrm RIGHT_ALT L  &hrm RIGHT_CONTROL SEMICOLON
&kp Z                &kp X            &kp C                &kp V              &kp B                               &kp N        &kp M               &kp COMMA             &kp DOT           &kp SLASH
                                                           &kp SPACE          &lt 2 ESCAPE  &kp TAB    &kp ENTER  &lt 1 ENTER  &kp BSPC
            >;
        };
    };
};
